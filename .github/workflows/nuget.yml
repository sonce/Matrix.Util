name: NuGet Generation

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    name: Update NuGet package
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          source-url: https://nuget.pkg.github.com/sonce/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GH_TOKEN}}

      - name: Build
        run: dotnet build --configuration Release

      - name: Test with dotnet
        run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Version and Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Prep Version String
        run: echo ::set-env name=VERSION_NUMBER::$(echo ${{ steps.tag_version.outputs.new_tag }} | sed 's/[v]//g')
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          
      - name: Update project version
        uses: roryprimrose/set-vs-sdk-project-version@v1
        with:
          version: ${{ env.VERSION_NUMBER }}

      - name: Pack
        run: dotnet pack -c Release -o out  

      - name: Publish Package-Github
        run: dotnet nuget push ./out/*.nupkg -k ${{ secrets.GH_TOKEN }} -s https://nuget.pkg.github.com/sonce/index.json --skip-duplicate --no-symbols

      - name: Publish Package-Nuget
        run: dotnet nuget push ./out/*.nupkg -k ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION_NUMBER }}
          name: Release ${{ env.VERSION_NUMBER }}
          body: ${{ steps.tag_version.outputs.changelog }}
          token: ${{ secrets.GH_TOKEN }}